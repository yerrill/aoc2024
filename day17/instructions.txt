2 bst A - B = get lowest 3 bits of A            | B = 66752888 % 8 = 0              | B = 8344111 % 8 = 7           | B = 1043013 % 8 = 5
1 bxl (7) - B = B XOR 7                         | B = 0 ^ 7 = 7                     | B = 7 ^ 7 = 0                 | B = 5 ^ 7 = 2
7 cdv B - C = A / 2^B                           | C = 66752888 // 2^7 = 521506      | C = 8344111 // 2^0 = 8344111  | C = 1043013 // 2^2 = 260753
1 bxl (7) - B = B XOR 7                         | B = 7 ^ 7 = 0                     | B = 0 ^ 7 = 7                 | B = 2 ^ 7 = 5
0 adv (3) - A = A / 2^A                         | A = 66752888 // 2^3 = 8344111     | A = 8344111 // 2^3 = 1043013  | A = 1043013 // 2^3 = 130376
4 bxc _ - B = B XOR C                           | B = 0 ^ 521506 = 521506           | B = 7 ^ 8344111 = 8344104     | B = 5 ^ 260753 = 260756
5 out B - Print B                               | Print = 521506 % 8 = 2            | Print = 0 % 8 = 0             | Print = 260756 % 8 = 4
3 jnz 0 - Branch start if A still has value (Go until a = 0?)

0 adv (3) -> Bit shift 3
Starting state of B, C inconsequential

Program: 2,4,1,7,7,5,1,7,0,3,4,1,5,5,3,0